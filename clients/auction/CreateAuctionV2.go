// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package auction

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// Create a new auction account bound to a resource, initially in a pending state.
// The only one difference with above instruction it's additional parameters in CreateAuctionArgsV2
type CreateAuctionV2 struct {
	Args *CreateAuctionArgsV2

	// [0] = [SIGNER] creator
	// ··········· The account creating the auction, which is authorised to make changes.
	//
	// [1] = [WRITE] uninitializedAuction
	// ··········· Uninitialized auction account.
	//
	// [2] = [WRITE] auctionExtended
	// ··········· Auction extended data account (pda relative to auction of ['auction', program id, vault key, 'extended']).
	//
	// [3] = [] rentSysvar
	// ··········· Rent sysvar
	//
	// [4] = [] system
	// ··········· System account
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewCreateAuctionV2InstructionBuilder creates a new `CreateAuctionV2` instruction builder.
func NewCreateAuctionV2InstructionBuilder() *CreateAuctionV2 {
	nd := &CreateAuctionV2{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 5),
	}
	return nd
}

// SetArgs sets the "args" parameter.
func (inst *CreateAuctionV2) SetArgs(args CreateAuctionArgsV2) *CreateAuctionV2 {
	inst.Args = &args
	return inst
}

// SetCreatorAccount sets the "creator" account.
// The account creating the auction, which is authorised to make changes.
func (inst *CreateAuctionV2) SetCreatorAccount(creator ag_solanago.PublicKey) *CreateAuctionV2 {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(creator).SIGNER()
	return inst
}

// GetCreatorAccount gets the "creator" account.
// The account creating the auction, which is authorised to make changes.
func (inst *CreateAuctionV2) GetCreatorAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[0]
}

// SetUninitializedAuctionAccount sets the "uninitializedAuction" account.
// Uninitialized auction account.
func (inst *CreateAuctionV2) SetUninitializedAuctionAccount(uninitializedAuction ag_solanago.PublicKey) *CreateAuctionV2 {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(uninitializedAuction).WRITE()
	return inst
}

// GetUninitializedAuctionAccount gets the "uninitializedAuction" account.
// Uninitialized auction account.
func (inst *CreateAuctionV2) GetUninitializedAuctionAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[1]
}

// SetAuctionExtendedAccount sets the "auctionExtended" account.
// Auction extended data account (pda relative to auction of ['auction', program id, vault key, 'extended']).
func (inst *CreateAuctionV2) SetAuctionExtendedAccount(auctionExtended ag_solanago.PublicKey) *CreateAuctionV2 {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(auctionExtended).WRITE()
	return inst
}

// GetAuctionExtendedAccount gets the "auctionExtended" account.
// Auction extended data account (pda relative to auction of ['auction', program id, vault key, 'extended']).
func (inst *CreateAuctionV2) GetAuctionExtendedAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[2]
}

// SetRentSysvarAccount sets the "rentSysvar" account.
// Rent sysvar
func (inst *CreateAuctionV2) SetRentSysvarAccount(rentSysvar ag_solanago.PublicKey) *CreateAuctionV2 {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(rentSysvar)
	return inst
}

// GetRentSysvarAccount gets the "rentSysvar" account.
// Rent sysvar
func (inst *CreateAuctionV2) GetRentSysvarAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[3]
}

// SetSystemAccount sets the "system" account.
// System account
func (inst *CreateAuctionV2) SetSystemAccount(system ag_solanago.PublicKey) *CreateAuctionV2 {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(system)
	return inst
}

// GetSystemAccount gets the "system" account.
// System account
func (inst *CreateAuctionV2) GetSystemAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[4]
}

func (inst CreateAuctionV2) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: ag_binary.TypeIDFromUint8(Instruction_CreateAuctionV2),
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst CreateAuctionV2) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *CreateAuctionV2) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.Args == nil {
			return errors.New("Args parameter is not set")
		}
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Creator is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.UninitializedAuction is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.AuctionExtended is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.RentSysvar is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.System is not set")
		}
	}
	return nil
}

func (inst *CreateAuctionV2) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("CreateAuctionV2")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=1]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("Args", *inst.Args))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=5]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("             creator", inst.AccountMetaSlice[0]))
						accountsBranch.Child(ag_format.Meta("uninitializedAuction", inst.AccountMetaSlice[1]))
						accountsBranch.Child(ag_format.Meta("     auctionExtended", inst.AccountMetaSlice[2]))
						accountsBranch.Child(ag_format.Meta("          rentSysvar", inst.AccountMetaSlice[3]))
						accountsBranch.Child(ag_format.Meta("              system", inst.AccountMetaSlice[4]))
					})
				})
		})
}

func (obj CreateAuctionV2) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Args` param:
	err = encoder.Encode(obj.Args)
	if err != nil {
		return err
	}
	return nil
}
func (obj *CreateAuctionV2) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Args`:
	err = decoder.Decode(&obj.Args)
	if err != nil {
		return err
	}
	return nil
}

// NewCreateAuctionV2Instruction declares a new CreateAuctionV2 instruction with the provided parameters and accounts.
func NewCreateAuctionV2Instruction(
	// Parameters:
	args CreateAuctionArgsV2,
	// Accounts:
	creator ag_solanago.PublicKey,
	uninitializedAuction ag_solanago.PublicKey,
	auctionExtended ag_solanago.PublicKey,
	rentSysvar ag_solanago.PublicKey,
	system ag_solanago.PublicKey) *CreateAuctionV2 {
	return NewCreateAuctionV2InstructionBuilder().
		SetArgs(args).
		SetCreatorAccount(creator).
		SetUninitializedAuctionAccount(uninitializedAuction).
		SetAuctionExtendedAccount(auctionExtended).
		SetRentSysvarAccount(rentSysvar).
		SetSystemAccount(system)
}
