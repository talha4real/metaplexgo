// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package token_vault

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// Sets the authority of the vault to a new authority.
type SetAuthority struct {

	// [0] = [WRITE] vault
	// ··········· Vault
	//
	// [1] = [SIGNER] vaultAuthority
	// ··········· Vault authority
	//
	// [2] = [] newAuthority
	// ··········· New authority
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewSetAuthorityInstructionBuilder creates a new `SetAuthority` instruction builder.
func NewSetAuthorityInstructionBuilder() *SetAuthority {
	nd := &SetAuthority{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 3),
	}
	return nd
}

// SetVaultAccount sets the "vault" account.
// Vault
func (inst *SetAuthority) SetVaultAccount(vault ag_solanago.PublicKey) *SetAuthority {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(vault).WRITE()
	return inst
}

// GetVaultAccount gets the "vault" account.
// Vault
func (inst *SetAuthority) GetVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetVaultAuthorityAccount sets the "vaultAuthority" account.
// Vault authority
func (inst *SetAuthority) SetVaultAuthorityAccount(vaultAuthority ag_solanago.PublicKey) *SetAuthority {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(vaultAuthority).SIGNER()
	return inst
}

// GetVaultAuthorityAccount gets the "vaultAuthority" account.
// Vault authority
func (inst *SetAuthority) GetVaultAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetNewAuthorityAccount sets the "newAuthority" account.
// New authority
func (inst *SetAuthority) SetNewAuthorityAccount(newAuthority ag_solanago.PublicKey) *SetAuthority {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(newAuthority)
	return inst
}

// GetNewAuthorityAccount gets the "newAuthority" account.
// New authority
func (inst *SetAuthority) GetNewAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

func (inst SetAuthority) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: ag_binary.TypeIDFromUint8(Instruction_SetAuthority),
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst SetAuthority) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *SetAuthority) Validate() error {
	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Vault is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.VaultAuthority is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.NewAuthority is not set")
		}
	}
	return nil
}

func (inst *SetAuthority) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("SetAuthority")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=0]").ParentFunc(func(paramsBranch ag_treeout.Branches) {})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=3]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("         vault", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("vaultAuthority", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("  newAuthority", inst.AccountMetaSlice.Get(2)))
					})
				})
		})
}

func (obj SetAuthority) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	return nil
}
func (obj *SetAuthority) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	return nil
}

// NewSetAuthorityInstruction declares a new SetAuthority instruction with the provided parameters and accounts.
func NewSetAuthorityInstruction(
	// Accounts:
	vault ag_solanago.PublicKey,
	vaultAuthority ag_solanago.PublicKey,
	newAuthority ag_solanago.PublicKey) *SetAuthority {
	return NewSetAuthorityInstructionBuilder().
		SetVaultAccount(vault).
		SetVaultAuthorityAccount(vaultAuthority).
		SetNewAuthorityAccount(newAuthority)
}
